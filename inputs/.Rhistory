asec[is.na(wage) & paidhre == 'Yes', wage := hrearn]
asec$hrly.earn <- log(asec$wage)
asec$wkly.earn <- log(asec$wage * asec$hrs)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(wkly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "weekly earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
# then compare annual earnings
asec[, hrs := hrslw]
asec[, wage := hrearn]
asec[paidhre == 'No', wage := wkearn/hrs]
asec$hrly.earn <- log(asec$wage)
asec$annu.earn <- log(asec$wage * asec$hrs * asec$wkswork)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(annu.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "annual earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
par(mar=c(0,4,0,0))
# keep lower nonreport rate: hours last week
asec[, hrs := hrslw]
asec[, wage := hrearn]
asec[is.na(hrearn) & paidhre == 'No', wage := wkearn/hrs]
asec$hrly.earn <- log(asec$wage)
asec$wkly.earn <- log(asec$wage * asec$hrs)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(wkly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "weekly earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
# when you use usual hours, 2% less variation is explained by hours, but this is largely because there is less variation to explain
asec[, hrs := uslhrs]
asec[, wage := hrearn]
asec[is.na(hrearn), wage := wkearn/hrs]
asec$hrly.earn <- log(asec$wage)
asec$wkly.earn <- log(asec$wage * asec$hrs)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(wkly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "weekly earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
# asec[paidhre == 'No', wage := earnwke / hourslw]
# another option is to use weekly wages
asec[, wage := wkearn / hrs]
asec[is.na(wage) & paidhre == 'Yes', wage := hrearn]
asec$hrly.earn <- log(asec$wage)
asec$wkly.earn <- log(asec$wage * asec$hrs)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(wkly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "weekly earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
# then compare annual earnings
asec[, hrs := hrslw]
asec[, wage := hrearn]
asec[paidhre == 'No', wage := wkearn/hrs]
asec$hrly.earn <- log(asec$wage)
asec$annu.earn <- log(asec$wage * asec$hrs * asec$wkswork)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(annu.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "annual earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
par(mar=c(2,4,0,0))
# keep lower nonreport rate: hours last week
asec[, hrs := hrslw]
asec[, wage := hrearn]
asec[is.na(hrearn) & paidhre == 'No', wage := wkearn/hrs]
asec$hrly.earn <- log(asec$wage)
asec$wkly.earn <- log(asec$wage * asec$hrs)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(wkly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "weekly earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
# when you use usual hours, 2% less variation is explained by hours, but this is largely because there is less variation to explain
asec[, hrs := uslhrs]
asec[, wage := hrearn]
asec[is.na(hrearn), wage := wkearn/hrs]
asec$hrly.earn <- log(asec$wage)
asec$wkly.earn <- log(asec$wage * asec$hrs)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(wkly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "weekly earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
# asec[paidhre == 'No', wage := earnwke / hourslw]
# another option is to use weekly wages
asec[, wage := wkearn / hrs]
asec[is.na(wage) & paidhre == 'Yes', wage := hrearn]
asec$hrly.earn <- log(asec$wage)
asec$wkly.earn <- log(asec$wage * asec$hrs)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(wkly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "weekly earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
# then compare annual earnings
asec[, hrs := hrslw]
asec[, wage := hrearn]
asec[paidhre == 'No', wage := wkearn/hrs]
asec$hrly.earn <- log(asec$wage)
asec$annu.earn <- log(asec$wage * asec$hrs * asec$wkswork)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(annu.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "annual earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
axes = F
# keep lower nonreport rate: hours last week
asec[, hrs := hrslw]
asec[, wage := hrearn]
asec[is.na(hrearn) & paidhre == 'No', wage := wkearn/hrs]
asec$hrly.earn <- log(asec$wage)
asec$wkly.earn <- log(asec$wage * asec$hrs)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(wkly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "weekly earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
# when you use usual hours, 2% less variation is explained by hours, but this is largely because there is less variation to explain
asec[, hrs := uslhrs]
asec[, wage := hrearn]
asec[is.na(hrearn), wage := wkearn/hrs]
asec$hrly.earn <- log(asec$wage)
asec$wkly.earn <- log(asec$wage * asec$hrs)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(wkly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "weekly earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
# asec[paidhre == 'No', wage := earnwke / hourslw]
# another option is to use weekly wages
asec[, wage := wkearn / hrs]
asec[is.na(wage) & paidhre == 'Yes', wage := hrearn]
asec$hrly.earn <- log(asec$wage)
asec$wkly.earn <- log(asec$wage * asec$hrs)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(wkly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "weekly earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
# then compare annual earnings
asec[, hrs := hrslw]
asec[, wage := hrearn]
asec[paidhre == 'No', wage := wkearn/hrs]
asec$hrly.earn <- log(asec$wage)
asec$annu.earn <- log(asec$wage * asec$hrs * asec$wkswork)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(annu.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "annual earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
par(mfrow = c(2,2))
xlim <- c(-.35, .35)
ylim <- c(-.35, .35)
par(mar = c(0,4,2,0))
# keep lower nonreport rate: hours last week
asec[, hrs := hrslw]
asec[, wage := hrearn]
asec[is.na(hrearn) & paidhre == 'No', wage := wkearn/hrs]
asec$hrly.earn <- log(asec$wage)
asec$wkly.earn <- log(asec$wage * asec$hrs)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(wkly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "weekly earnings", ylim = ylim, xlim = xlim, axes = F)
axis(side = 2, labels = T)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
par(mar = c(0,0,2,2))
# when you use usual hours, 2% less variation is explained by hours, but this is largely because there is less variation to explain
asec[, hrs := uslhrs]
asec[, wage := hrearn]
asec[is.na(hrearn), wage := wkearn/hrs]
asec$hrly.earn <- log(asec$wage)
asec$wkly.earn <- log(asec$wage * asec$hrs)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(wkly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "weekly earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
# asec[paidhre == 'No', wage := earnwke / hourslw]
par(mar = c(0,4,0,4))
# another option is to use weekly wages
asec[, wage := wkearn / hrs]
asec[is.na(wage) & paidhre == 'Yes', wage := hrearn]
asec$hrly.earn <- log(asec$wage)
asec$wkly.earn <- log(asec$wage * asec$hrs)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(wkly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "weekly earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
par(mar = c(0,0,2,4))
# then compare annual earnings
asec[, hrs := hrslw]
asec[, wage := hrearn]
asec[paidhre == 'No', wage := wkearn/hrs]
asec$hrly.earn <- log(asec$wage)
asec$annu.earn <- log(asec$wage * asec$hrs * asec$wkswork)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(annu.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "annual earnings", ylim = ylim, xlim = xlim)
abline(lm(b~a), col = 'gray')
text(min(a)+.05, max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?signif
cbind(plyr::ddply(asec, ~sector, summarize,
`$\\bar{w}_u$`= round(mean(wkswork, na.rm = T),1),
`$\\sigma$`=round(sd(wkswork, na.rm = T),1))) %>%
knitr::kable(caption = "Weeks worked per year by industry.")
cbind(plyr::ddply(asec, ~sector, summarize,
`$\\bar{w}_u$`= round(mean(wkswork, na.rm = T),1),
`$\\sigma$`=round(sd(wkswork, na.rm = T),1)))[-21] %>%
knitr::kable(caption = "Weeks worked per year by industry.")
cbind(plyr::ddply(asec, ~sector, summarize,
`$\\bar{w}_u$`= round(mean(wkswork, na.rm = T),1),
`$\\sigma$`=round(sd(wkswork, na.rm = T),1)))[-21] %>%
knitr::kable(caption = "Weeks worked per year by industry.")
cbind(plyr::ddply(asec, ~sector, summarize,
`$\\bar{w}_u$`= round(mean(wkswork, na.rm = T),1),
`$\\sigma$`=round(sd(wkswork, na.rm = T),1)))[-21,] %>%
knitr::kable(caption = "Weeks worked per year by industry.")
length(sector.names)
length(2:20)
a <- lm(hrly.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
a <- a$coefficients[2:20]
b <- lm(annu.earn ~ sector + educ + exp^4 + sex + region + race + exp^4*educ, data = asec, weights = ernlwt*hrs)
b <- b$coefficients[2:20]
plot(a, b, xlab = "hourly earnings", ylab = "annual earnings", ylim = ylim, xlim = xlim, yaxt = "n")
abline(lm(b~a), col = 'gray')
text(min(a), max(b), round(1 - summary(lm(a ~ b))$r.squared,3))
secLabels(a,b)
sector.names
length(a)
length(b)
length(sector.names)
?switch
?xaxt
/par
?par
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(magrittr)
`%>%`
month.abb[1]
month.Abb[1]
month.abb[1]
tolower(month.abb[1])
setwd('~/Documents/2fpm/inputs')
yr = 2015
yr = 2012
mo = 4
message(paste(yr, 'Month', mo))
index <- yr - 1999 + 1  # index for output vector
cps <- paste0('../data/cps', tolower(month.abb[mo]), substr(yr, 3,4),'.dta') %>%
read.dta13(convert.factors = F) %>%
data.table
if (yr < 2003)
names(cps)[grep('_nwsswgt', names(cps))] <- 'weight.fn' else
library
library(readstata13)
cps <- paste0('../data/cps', tolower(month.abb[mo]), substr(yr, 3,4),'.dta') %>%
read.dta13(convert.factors = F) %>%
data.table
if (yr < 2003)
names(cps)[grep('_nwsswgt', names(cps))] <- 'weight.fn' else
names(cps)[grep('pwsswgt', names(cps))] <- 'weight.fn'
library(data.table)
cps <- paste0('../data/cps', tolower(month.abb[mo]), substr(yr, 3,4),'.dta') %>%
read.dta13(convert.factors = F) %>%
data.table
if (yr < 2003)
names(cps)[grep('_nwsswgt', names(cps))] <- 'weight.fn' else
names(cps)[grep('pwsswgt', names(cps))] <- 'weight.fn'
cps[is.na(weight.fn), weight.fn := 0]
if (yr >= 2012 & mo >= 5)
names(cps)[grep('prtage', names(cps))] <- 'peage'
mo = 5
index <- yr - 1999 + 1  # index for output vector
# extract relevant month
# (not sure how memory is handled here -- does R drop the rest well?)
cps <- paste0('../data/cps', tolower(month.abb[mo]), substr(yr, 3,4),'.dta') %>%
read.dta13(convert.factors = F) %>%
data.table
## when calculate regression trees, want to drop unuseful variables
# DROP:
#   - name starts with an underscore
#   - variable has only one value
#   - more than 1/2 of variable are missing values
# cps <- as.data.frame(cps)[, which(sapply(as.data.frame(cps), function(x) length(table(x))) > 1)] %>%
#   # .[, -grep("^\\_", names(cps))] %>%
#   # .[, which(sapply(., function(x) !is.character(x)))] %>%
#   .[, which(sapply(., function(x) sum(is.na(x))) <= nrow(.)/2)] %>%
#   data.table
# rename weights
if (yr < 2003)
names(cps)[grep('_nwsswgt', names(cps))] <- 'weight.fn' else
names(cps)[grep('pwsswgt', names(cps))] <- 'weight.fn'
cps[is.na(weight.fn), weight.fn := 0]
# rename age variable
if (yr >= 2012 & mo >= 5)
names(cps)[grep('prtage', names(cps))] <- 'peage'
mo = 6
index <- yr - 1999 + 1  # index for output vector
# extract relevant month
# (not sure how memory is handled here -- does R drop the rest well?)
cps <- paste0('../data/cps', tolower(month.abb[mo]), substr(yr, 3,4),'.dta') %>%
read.dta13(convert.factors = F) %>%
data.table
## when calculate regression trees, want to drop unuseful variables
# DROP:
#   - name starts with an underscore
#   - variable has only one value
#   - more than 1/2 of variable are missing values
# cps <- as.data.frame(cps)[, which(sapply(as.data.frame(cps), function(x) length(table(x))) > 1)] %>%
#   # .[, -grep("^\\_", names(cps))] %>%
#   # .[, which(sapply(., function(x) !is.character(x)))] %>%
#   .[, which(sapply(., function(x) sum(is.na(x))) <= nrow(.)/2)] %>%
#   data.table
# rename weights
if (yr < 2003)
names(cps)[grep('_nwsswgt', names(cps))] <- 'weight.fn' else
names(cps)[grep('pwsswgt', names(cps))] <- 'weight.fn'
cps[is.na(weight.fn), weight.fn := 0]
# rename age variable
if (yr >= 2012 & mo >= 5)
names(cps)[grep('prtage', names(cps))] <- 'peage'
yr = 2013
index <- yr - 1999 + 1  # index for output vector
# extract relevant month
# (not sure how memory is handled here -- does R drop the rest well?)
cps <- paste0('../data/cps', tolower(month.abb[mo]), substr(yr, 3,4),'.dta') %>%
read.dta13(convert.factors = F) %>%
data.table
## when calculate regression trees, want to drop unuseful variables
# DROP:
#   - name starts with an underscore
#   - variable has only one value
#   - more than 1/2 of variable are missing values
# cps <- as.data.frame(cps)[, which(sapply(as.data.frame(cps), function(x) length(table(x))) > 1)] %>%
#   # .[, -grep("^\\_", names(cps))] %>%
#   # .[, which(sapply(., function(x) !is.character(x)))] %>%
#   .[, which(sapply(., function(x) sum(is.na(x))) <= nrow(.)/2)] %>%
#   data.table
# rename weights
if (yr < 2003)
names(cps)[grep('_nwsswgt', names(cps))] <- 'weight.fn' else
names(cps)[grep('pwsswgt', names(cps))] <- 'weight.fn'
cps[is.na(weight.fn), weight.fn := 0]
# rename age variable
if (yr >= 2012 & mo >= 5)
names(cps)[grep('prtage', names(cps))] <- 'peage'
yr = 2012
mo = 5
message(paste(yr, 'Month', mo))
index <- yr - 1999 + 1  # index for output vector
# extract relevant month
# (not sure how memory is handled here -- does R drop the rest well?)
cps <- paste0('../data/cps', tolower(month.abb[mo]), substr(yr, 3,4),'.dta') %>%
read.dta13(convert.factors = F) %>%
data.table
## when calculate regression trees, want to drop unuseful variables
# DROP:
#   - name starts with an underscore
#   - variable has only one value
#   - more than 1/2 of variable are missing values
# cps <- as.data.frame(cps)[, which(sapply(as.data.frame(cps), function(x) length(table(x))) > 1)] %>%
#   # .[, -grep("^\\_", names(cps))] %>%
#   # .[, which(sapply(., function(x) !is.character(x)))] %>%
#   .[, which(sapply(., function(x) sum(is.na(x))) <= nrow(.)/2)] %>%
#   data.table
# rename weights
if (yr < 2003)
names(cps)[grep('_nwsswgt', names(cps))] <- 'weight.fn' else
names(cps)[grep('pwsswgt', names(cps))] <- 'weight.fn'
cps[is.na(weight.fn), weight.fn := 0]
# rename age variable
if (yr >= 2012 & mo >= 5)
names(cps)[grep('prtage', names(cps))] <- 'peage'
cps[, peage := prtage]
if (yr >= 2013)
names(cps)[grep('prtage', names(cps))] <- 'peage'
# rename income category
if (yr >= 2010)
names(cps)[grep('hefaminc', names(cps))] <- 'hufaminc'
# concatenate household ID when it is split
if (yr >= 2005)
cps$hrhhid <- paste0(cps$hrhhid, cps$hrhhid2)
# rename earnings
names(cps)[grep('prernwa', names(cps))] <- 'earn'
cps[is.na(peern), peern := 0]  # 'overtime earnings'
cps[is.na(puern2), puern2 := 0]  # 'second overtimes earnings'
cps[, earn := earn + peern + puern2]  # add in two measures of overtime
# select relevant variables
cps <- cps[, .(hrhhid, hrmis, pulineno, hufaminc, hrhtype, prfamtyp,
prfamnum, peage, perrp, pemlr, earn, weight.fn)]
mo
yr = 2012
for (mo in 1:12) {
message(paste(yr, 'Month', mo))
index <- yr - 1999 + 1  # index for output vector
# extract relevant month
# (not sure how memory is handled here -- does R drop the rest well?)
cps <- paste0('../data/cps', tolower(month.abb[mo]), substr(yr, 3,4),'.dta') %>%
read.dta13(convert.factors = F) %>%
data.table
## when calculate regression trees, want to drop unuseful variables
# DROP:
#   - name starts with an underscore
#   - variable has only one value
#   - more than 1/2 of variable are missing values
# cps <- as.data.frame(cps)[, which(sapply(as.data.frame(cps), function(x) length(table(x))) > 1)] %>%
#   # .[, -grep("^\\_", names(cps))] %>%
#   # .[, which(sapply(., function(x) !is.character(x)))] %>%
#   .[, which(sapply(., function(x) sum(is.na(x))) <= nrow(.)/2)] %>%
#   data.table
# rename weights
if (yr < 2003)
names(cps)[grep('_nwsswgt', names(cps))] <- 'weight.fn' else
names(cps)[grep('pwsswgt', names(cps))] <- 'weight.fn'
cps[is.na(weight.fn), weight.fn := 0]
# rename age variable
if (yr >= 2012 & mo >= 5)
names(cps)[grep('prtage', names(cps))] <- 'peage'
# cps[, peage := prtage]
if (yr >= 2013)
names(cps)[grep('prtage', names(cps))] <- 'peage'
# rename income category
if (yr >= 2010)
names(cps)[grep('hefaminc', names(cps))] <- 'hufaminc'
# concatenate household ID when it is split
if (yr >= 2005)
cps$hrhhid <- paste0(cps$hrhhid, cps$hrhhid2)
# rename earnings
names(cps)[grep('prernwa', names(cps))] <- 'earn'
cps[is.na(peern), peern := 0]  # 'overtime earnings'
cps[is.na(puern2), puern2 := 0]  # 'second overtimes earnings'
cps[, earn := earn + peern + puern2]  # add in two measures of overtime
# select relevant variables
cps <- cps[, .(hrhhid, hrmis, pulineno, hufaminc, hrhtype, prfamtyp,
prfamnum, peage, perrp, pemlr, earn, weight.fn)]
# save file for year/month
filename <- paste0('../data-intermediate/cps', substr(yr, 3,4), month.abb[mo], '.rds')
saveRDS(cps, filename)
## alternatively we could save it as a feather
# feathername <- paste0('../data-intermediate/cps', month.abb[mo], substr(yr, 3,4), '.f')
# feather::write_feather(cps, feathername)
}
